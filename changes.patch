diff --git a/components/filters/DynamicFacets.tsx b/components/filters/DynamicFacets.tsx
index 8e579e0..52cdd49 100644
--- a/components/filters/DynamicFacets.tsx
+++ b/components/filters/DynamicFacets.tsx
@@ -37,40 +37,21 @@ export function DynamicFacets({ facets, renderConfig, onFacetClick }: DynamicFac
           const Component = FACET_COMPONENT_MAP[componentType as keyof typeof FACET_COMPONENT_MAP]
           if (!Component) return null
 
+
           const title = facetKey
             .replace(/_/g, ' ')
             .replace(/\b\w/g, (char) => char.toUpperCase())
 
-          if (componentType.startsWith('range')) {
-            const config = Array.isArray(facetItems) ? facetItems[0] as any : facetItems as any
 
+          if (componentType.startsWith('range')) {
+            const config = Array.isArray(facetItems) ? facetItems[0] as FacetItem : facetItems as FacetItem
             return (
               <Component
                 key={facetKey}
                 id={facetKey}
                 title={title}
                 range={config.range}
-                defaultValue={config.defaultValue}
-                onRangeChange={({ min, max }) => {
-                  const optionsMin = config.options?.date_min || []
-                  const optionsMax = config.options?.date_max || []
-
-                  // Find closest match by label (exact match or fallback to lower)
-                  const findClosest = (list: any[], target: number) =>
-                    list.find((item) => Number(item.text) === target) ||
-                    list.find((item) => Number(item.text) <= target)
-
-                  const closestMin = findClosest(optionsMin, min)
-                  const closestMax = findClosest(optionsMax, max)
-
-                  const url = closestMax?.narrow_url || closestMin?.narrow_url
-
-                  if (url) {
-                    onFacetClick?.(url)
-                  }
-                }}
-                items={[]}
-              />
+                defaultValue={config.defaultValue} items={[]} />
             )
           }
 
diff --git a/components/filters/FacetDateRangePanel.tsx b/components/filters/FacetDateRangePanel.tsx
index c70a236..7920be4 100644
--- a/components/filters/FacetDateRangePanel.tsx
+++ b/components/filters/FacetDateRangePanel.tsx
@@ -13,12 +13,7 @@ type FacetDateRangePanelProps = {
   defaultValue?: [number, number]
   precisionOptions?: { label: string; value: string }[]
   onSearch?: (value: string) => void
-  onRangeChange?: (range: {
-    min: number
-    max: number
-    precision: string
-    diff: number
-  }) => void
+  onRangeChange?: (range: [number, number]) => void
   onPrecisionChange?: (precision: string) => void
 }
 
@@ -43,12 +38,7 @@ export function FacetDateRangePanel({
   const handleSliderChange = (value: number[]) => {
     const newRange: [number, number] = [value[0], value[1]]
     setSliderValue(newRange)
-    onRangeChange?.({
-      min: newRange[0],
-      max: newRange[1],
-      precision,
-      diff: year || 0,
-    })
+    onRangeChange?.(newRange)
   }
 
   const handleSearchSubmit = () => {
@@ -106,12 +96,6 @@ export function FacetDateRangePanel({
                 onValueChange={(val) => {
                   setPrecision(val)
                   onPrecisionChange?.(val)
-                  onRangeChange?.({
-                    min: sliderValue[0],
-                    max: sliderValue[1],
-                    precision: val,
-                    diff: year || 0,
-                  })
                 }}
               >
                 <SelectTrigger className="w-[120px] h-9">
@@ -130,17 +114,7 @@ export function FacetDateRangePanel({
                 min={0}
                 className="w-20 h-9"
                 value={year}
-                onChange={(e) => {
-                  const val = e.target.value ? parseInt(e.target.value) : ''
-                  setYear(val)
-                  onRangeChange?.({
-                    min: sliderValue[0],
-                    max: sliderValue[1],
-                    precision,
-                    diff: val || 0,
-                  })
-                }}
-
+                onChange={(e) => setYear(e.target.value ? parseInt(e.target.value) : '')}
               />
             </div>
           </div>
diff --git a/components/filters/FacetPanel.tsx b/components/filters/FacetPanel.tsx
index ad24e42..b822ad4 100644
--- a/components/filters/FacetPanel.tsx
+++ b/components/filters/FacetPanel.tsx
@@ -31,6 +31,7 @@ export function FacetPanel({
   onSelect,
 }: FacetPanelProps) {
   const [isExpanded, setIsExpanded] = React.useState(defaultExpanded)
+  // const [sortBy, setSortBy] = React.useState<'name' | 'count'>('name')
   const [sortBy, setSortBy] = React.useState<'name-asc' | 'name-desc' | 'count-desc' | 'count-asc'>('name-asc')
   const [selectedItem, setSelectedItem] = React.useState<string | null>(null)
 
@@ -39,6 +40,11 @@ export function FacetPanel({
     onToggle?.(id)
   }
 
+  // const sortedItems = React.useMemo(() => {
+  //   const itemsCopy = [...(items ?? [])]
+  //   if (sortBy === 'name') return itemsCopy.sort((a, b) => a.label.localeCompare(b.label))
+  //   return itemsCopy.sort((a, b) => b.count - a.count)
+  // }, [items, sortBy])
   const sortedItems = React.useMemo(() => {
     const itemsCopy = [...(items ?? [])]
 
@@ -83,6 +89,21 @@ export function FacetPanel({
           )}
         </button>
       </div>
+
+      {/* <div className="text-xs text-gray-500 px-4 py-2 flex justify-between border-b">
+        <button
+          onClick={() => setSortBy('name')}
+          className={cn(sortBy === 'name' && 'font-semibold')}
+        >
+          A-Z
+        </button>
+        <button
+          onClick={() => setSortBy('count')}
+          className={cn(sortBy === 'count' && 'font-semibold')}
+        >
+          Count
+        </button>
+      </div> */}
       <div className="text-xs text-gray-500 px-4 py-2 flex justify-between border-b">
         <button
           onClick={() =>
diff --git a/components/filters/FacetRadioPanel.tsx b/components/filters/FacetRadioPanel.tsx
index dc466d9..5e1310e 100644
--- a/components/filters/FacetRadioPanel.tsx
+++ b/components/filters/FacetRadioPanel.tsx
@@ -8,7 +8,6 @@ type RadioFacetItem = {
   label: string
   count: number
   value: string
-  href: string
 }
 
 type FacetRadioPanelProps = {
@@ -28,7 +27,6 @@ export function FacetRadioPanel({
   items = [],
   expanded: defaultExpanded = true,
   onToggle,
-  onSelect,
 }: FacetRadioPanelProps) {
   const [isExpanded, setIsExpanded] = React.useState(defaultExpanded)
   const [selectedValue, setSelectedValue] = React.useState<string | null>(null)
@@ -38,15 +36,8 @@ export function FacetRadioPanel({
     onToggle?.(id)
   }
 
-  const handleSelect = (item: RadioFacetItem) => {
-    setSelectedValue((prev) => {
-      const next = prev === item.value ? null : item.value
-      if (onSelect) {
-        const base = process.env.NEXT_PUBLIC_API_URL + '/api/v1/search/item-parts/facets'
-        onSelect(next ? item.href || base : base)
-      }
-      return next
-    })
+  const handleSelect = (value: string) => {
+    setSelectedValue((prev) => (prev === value ? null : value))
   }
 
   const visibleItems = selectedValue
@@ -74,7 +65,7 @@ export function FacetRadioPanel({
           {visibleItems.map((item) => (
             <li key={item.value}>
               <button
-                onClick={() => handleSelect(item)}
+                onClick={() => handleSelect(item.value)}
                 className={cn(
                   'w-full text-left flex justify-between items-center px-2 py-1 rounded hover:bg-muted transition-colors',
                   selectedValue === item.value && 'bg-muted font-semibold'
diff --git a/components/manuscripts-search.tsx b/components/manuscripts-search.tsx
index a0f3616..a93d67d 100644
--- a/components/manuscripts-search.tsx
+++ b/components/manuscripts-search.tsx
@@ -10,7 +10,7 @@ import { Grid, List } from 'lucide-react'
 export function ManuscriptsSearch() {
   const [, setViewMode] = React.useState<'table' | 'grid'>('table')
   const [resultType, setResultType] = React.useState<string>('')
-
+  
   return (
     <div className='h-screen bg-gray-50'>
       <div className='px-6 py-4 border-b bg-white'>
diff --git a/lib/filter-config.ts b/lib/filter-config.ts
index 115c61a..fdcdf72 100644
--- a/lib/filter-config.ts
+++ b/lib/filter-config.ts
@@ -11,6 +11,9 @@ export const FILTER_RENDER_MAP: Record<
     text_date_slider: 'range',
     date_precision: 'number-select',
     type: 'checkbox',
+    issuer_type: 'checkbox',
+    issuer_name: 'checkbox',
+    named_beneficiary: 'checkbox',
     repository_city: 'checkbox',
     repository_name: 'checkbox',
   },
diff --git a/lib/filter-order.ts b/lib/filter-order.ts
index edd6972..c62b157 100644
--- a/lib/filter-order.ts
+++ b/lib/filter-order.ts
@@ -3,9 +3,11 @@ export const FILTER_ORDER_MAP: Record<string, string[]> = {
       'image_availability',
       'text_date_slider',
       'date_precision',
-      'type',
+      'document_type',
       'repository_city',
       'repository_name',
+      'issuer_name',
+      'named_beneficiary',
     ],
     texts: [
       'text_date_slider',
diff --git a/types/facets.ts b/types/facets.ts
index 1ad8159..746dccb 100644
--- a/types/facets.ts
+++ b/types/facets.ts
@@ -1,13 +1,13 @@
 export type FacetItem = {
-  text?: string
-  label?: string
-  count: number
-  narrow_url?: string
-  href?: string
-  value?: string
-  range?: [number, number]
-  defaultValue?: [number, number]
-  active?: boolean
-}
-
-export type FacetData = Record<string, FacetItem[] | FacetItem>
\ No newline at end of file
+    text?: string
+    label?: string
+    count: number
+    narrow_url?: string
+    href?: string
+    value?: string
+    range?: [number, number]
+    defaultValue?: [number, number]
+    active?: boolean
+  }
+  
+  export type FacetData = Record<string, FacetItem[] | FacetItem>
\ No newline at end of file
diff --git a/utils/fetch-facets.ts b/utils/fetch-facets.ts
index e99d893..0e1d5cd 100644
--- a/utils/fetch-facets.ts
+++ b/utils/fetch-facets.ts
@@ -22,26 +22,5 @@ export async function fetchFacetsAndResults(resultType: string, url?: string) {
   const results = data.objects?.results ?? []
   const count = data.objects?.count || 0
 
-  return { facets, results, count }
+  return { facets, results, count}
 }
-
-export function buildDateFacetUrl({
-  baseUrl,
-  min,
-  max,
-  precision,
-  diff,
-}: {
-  baseUrl: string
-  min: number
-  max: number
-  precision: string
-  diff: number
-}) {
-  const params = new URLSearchParams()
-  params.set('min_date', String(min))
-  params.set('max_date', String(max))
-  params.set('at_most_or_least', precision)
-  params.set('date_diff', String(diff))
-  return `${baseUrl}?${params.toString()}`
-}
\ No newline at end of file
diff --git a/utils/normalise-facets.ts b/utils/normalise-facets.ts
index 6543cba..8781d24 100644
--- a/utils/normalise-facets.ts
+++ b/utils/normalise-facets.ts
@@ -1,26 +1,23 @@
 export function normalizeFacets(fields: Record<string, any>) {
-  const min = fields.date_min?.[0]?.text
-  const max = fields.date_max?.[0]?.text
+    const min = 720 //fields.date_min?.[0]?.text
+    const max = 1440 //fields.date_max?.[0]?.text
 
-  if (typeof min === 'number' && typeof max === 'number') {
-    fields.text_date_slider = [
-      {
-        label: 'range',
-        value: 'range',
-        count: 0,
-        text: '',
-        range: [min, max],
-        defaultValue: [min, max],
-        options: {
-          date_min: fields.date_min || [],
-          date_max: fields.date_max || [],
+    if (typeof min === 'number' && typeof max === 'number') {
+      fields.text_date_slider = [
+        {
+          label: 'range',
+          value: 'range',
+          count: 0,
+          text: '',
+          range: [min, max],
+          defaultValue: [min, max],
         },
-      },
-    ]
+      ]
+    }
+  
+    delete fields.date_min
+    delete fields.date_max
+  
+    return fields
   }
-
-  delete fields.date_min
-  delete fields.date_max
-
-  return fields
-}
+  
\ No newline at end of file
